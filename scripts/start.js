'use strict';

process.env.NODE_ENV = 'development';

// Load environment variables from .env file. Suppress warnings using silent
// if this file is missing. dotenv will never modify any environment variables
// that have already been set.
// https://github.com/motdotla/dotenv

const fs = require('fs');
const WebpackDevServer = require('webpack-dev-server');
const chalk = require('chalk');
const paths = require('../config/paths');
const config = require('../config/webpack.config.dev');
const Webpack = require("webpack");
const devServerConfig = require('../config/webpack-dev-server.config');

const useYarn = fs.existsSync(paths.yarnLockFile);
const cli = useYarn ? 'yarn' : 'npm';
const isInteractive = process.stdout.isTTY;

// Tools like Cloud9 rely on this.
const DEFAULT_PORT = parseInt(process.env.PORT, 10) || 3000;
const compiler = new Webpack(config);

function run(port) {
  const protocol = process.env.HTTPS === 'true' ? 'https' : 'http';
  const host = process.env.HOST || 'localhost';

  // Serve webpack assets generated by the compiler over a web sever.
  const devServer = new WebpackDevServer(compiler, devServerConfig);

  // Launch WebpackDevServer.
  devServer.listen(port, err => {
    if (err) {
      return console.log(err);
    }

    console.log(chalk.cyan(`Starting the development server on ${protocol}://${host}:${port}/...`));
    console.log();
  });
}

run(DEFAULT_PORT);